<?php namespace App\Http\Controllers;

	use Session;
	use Request;
	use DB;
	use CRUDBooster;

	class AdminSisPrestamoController extends \crocodicstudio\crudbooster\controllers\CBController {

	    public function cbInit() {

			# START CONFIGURATION DO NOT REMOVE THIS LINE
			$this->title_field = "id";
			$this->limit = "20";
			$this->orderby = "id,desc";
			$this->global_privilege = false;
			$this->button_table_action = true;
			$this->button_bulk_action = true;
			$this->button_action_style = "button_icon";
			$this->button_add = true;
			$this->button_edit = true;
			$this->button_delete = true;
			$this->button_detail = true;
			$this->button_show = true;
			$this->button_filter = true;
			$this->button_import = false;
			$this->button_export = false;
			$this->table = "sis_prestamo";
			# END CONFIGURATION DO NOT REMOVE THIS LINE

			# START COLUMNS DO NOT REMOVE THIS LINE
			$this->col = [];
			$this->col[] = ["label"=>"Cliente","name"=>"id_cliente","id"=>"id_cliente" ,"join"=>"sis_cliente,nombres"];
			$this->col[] = ["label"=>"Cartera","name"=>"cartera"];
			$this->col[] = ["label"=>"Tiempo","name"=>"id_tiempo","join"=>"sis_tiempo,descripcion"];
			$this->col[] = ["label"=>"Forma Pago","name"=>"id_forma_pago","join"=>"sis_forma_pago,descripcion"];
			$this->col[] = ["label"=>"Codigo","name"=>"codigo"];
			$this->col[] = ["label"=>"Fecha","name"=>"fecha"];
			$this->col[] = ["label"=>"Fecha Fin","name"=>"fecha_fin"]; 
			$this->col[] = ["label"=>"Monto","name"=>"monto"];
			//$this->col[] = ["label"=>"Num Pagos","name"=>"num_pagos"];
			$this->col[] = ["label"=>"Total","name"=>"total_pagar"];
			$this->col[] = ["label"=>"Saldo","name"=>"saldo"];
			$this->col[] = ["label"=>"Pagos DE","name"=>"pagos_de"];
			//$this->col[] = ["label"=>"Estado","name"=>"estado"];
			# END COLUMNS DO NOT REMOVE THIS LINE

			$number_prestamo = DB::table('sis_prestamo')->max('id') + 1;
			$number_prestamo = str_pad($number_prestamo, 7, 0 , STR_PAD_LEFT);

			# START FORM DO NOT REMOVE THIS LINE
			$this->form = [];
			$this->form[] = ['label'=>'Codigo','name'=>'codigo','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10','readonly'=>'1', 'value'=>$number_prestamo];
			$this->form[] = ['label'=>'Cliente','name'=>'id_cliente','type'=>'datamodal','validation'=>'required|integer|min:0','width'=>'col-sm-10','datamodal_table'=>'sis_cliente','datamodal_columns'=>'nombres','datamodal_size'=>'small','datamodal_columns_alias_name'=>'Apellidos, Nombres'];
			$this->form[] = ['label'=>'Cartera', 'id'=>'cartera', 'name'=>'cartera','type'=>'select2','validation'=>'required','width'=>'col-sm-10','dataenum'=>'M|Maria;C|Cristhoper'];
			$this->form[] = ['label'=>'Interes','name'=>'id_interes','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'sis_interes,descripcion'];
			$this->form[] = ['label'=>'Tiempo','name'=>'id_tiempo','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'sis_tiempo,descripcion'];
			$this->form[] = ['label'=>'Forma Pago','name'=>'id_forma_pago','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'sis_forma_pago,descripcion'];
			$this->form[] = ['label'=>'Fecha','name'=>'fecha','type'=>'date','validation'=>'required|date','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Numero de Dias', 'id'=>'numdias','name'=>'num_dias','type'=>'number','validation'=>'','width'=>'col-sm-10'];
			$this->form[] = ['label'=>'Monto','name'=>'monto','type'=>'text','validation'=>'required','width'=>'col-sm-10'];
			$this->form[] = ['label'=>'Total a Pagar','name'=>'total_pagar','type'=>'text','validation'=>'','width'=>'col-sm-10', 'readonly'=> true];
			$this->form[] = ['label'=>'Saldo','name'=>'saldo','type'=>'text','validation'=>'','width'=>'col-sm-10', 'readonly'=> true];
			$this->form[] = ['label'=>'Estado', 'id'=>'estado', 'name'=>'estado','type'=>'select2','validation'=>'required','width'=>'col-sm-10','dataenum'=>'A|Activo;V|Vencido;P|Pagado;E|Especial'];

			// $columns[] = ['label'=>'Fecha','name'=>'fecha','type'=>'text','validation'=>'required|date','width'=>'col-sm-10'];
			// $columns[] = ['label'=>'Abono','name'=>'abono','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			// $this->form[] = ['label'=>'Lista de Pagos','name'=>'pagos','type'=>'child','columns'=>$columns,'table'=>'sis_pago','foreign_key'=>'id_prestamo'];
			# END FORM DO NOT REMOVE THIS LINE

			# OLD START FORM
			//$this->form = [];
			//$this->form[] = ['label'=>'Codigo','name'=>'codigo','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10', 'value'=>$number_prestamo,'readonly'=>true];
			//$this->form[] = ['label'=>'Cliente','name'=>'id_cliente','type'=>'datamodal','validation'=>'required|integer|min:0','width'=>'col-sm-10','datamodal_table'=>'sis_cliente','datamodal_columns'=>'nombres,apellidos','datamodal_size'=>'small','datamodal_columns_alias_name'=>'Apellidos, Nombres'];
			//$this->form[] = ['label'=>'Interes','name'=>'id_interes','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'sis_interes,descripcion'];
			//$this->form[] = ['label'=>'Forma Pago','name'=>'id_forma_pago','type'=>'select2','validation'=>'required|integer|min:0','width'=>'col-sm-10','datatable'=>'sis_forma_pago,descripcion'];
			//$this->form[] = ['label'=>'Fecha','name'=>'fecha','type'=>'date','validation'=>'required|date','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Monto','name'=>'monto','type'=>'text','validation'=>'required|min:1|max:255','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Num Pagos','name'=>'num_pagos','type'=>'number','validation'=>'required|integer|min:0','width'=>'col-sm-10'];
			//$this->form[] = ['label'=>'Estado','name'=>'estado','type'=>'select2','validation'=>'required|min:1|max:255','width'=>'col-sm-10','dataenum'=>'A|Activo;I|Inactivo;V|Vencido;P|Pagado'];
			# OLD END FORM

			/* 
	        | ---------------------------------------------------------------------- 
	        | Sub Module
	        | ----------------------------------------------------------------------     
			| @label          = Label of action 
			| @path           = Path of sub module
			| @foreign_key 	  = foreign key of sub table/module
			| @button_color   = Bootstrap Class (primary,success,warning,danger)
			| @button_icon    = Font Awesome Class  
			| @parent_columns = Sparate with comma, e.g : name,created_at
	        | 
	        */
	        $this->sub_module = array();
	        $this->sub_module[] = ['label'=>'PAGOS','path'=>'sis_pago','parent_columns'=>'codigo,fecha,pagos_de,monto,saldo','foreign_key'=>'id_prestamo','button_color'=>'success','button_icon'=>'fa fa-bars'];


	        /* 
	        | ---------------------------------------------------------------------- 
	        | Add More Action Button / Menu
	        | ----------------------------------------------------------------------     
	        | @label       = Label of action 
	        | @url         = Target URL, you can use field alias. e.g : [id], [name], [title], etc
	        | @icon        = Font awesome class icon. e.g : fa fa-bars
	        | @color 	   = Default is primary. (primary, warning, succecss, info)     
	        | @showIf 	   = If condition when action show. Use field alias. e.g : [id] == 1
	        | 
	        */
	        $this->addaction = array();


	        /* 
	        | ---------------------------------------------------------------------- 
	        | Add More Button Selected
	        | ----------------------------------------------------------------------     
	        | @label       = Label of action 
	        | @icon 	   = Icon from fontawesome
	        | @name 	   = Name of button 
	        | Then about the action, you should code at actionButtonSelected method 
	        | 
	        */
	        $this->button_selected = array();

	                
	        /* 
	        | ---------------------------------------------------------------------- 
	        | Add alert message to this module at overheader
	        | ----------------------------------------------------------------------     
	        | @message = Text of message 
	        | @type    = warning,success,danger,info        
	        | 
	        */
	        $this->alert        = array();
	                

	        
	        /* 
	        | ---------------------------------------------------------------------- 
	        | Add more button to header button 
	        | ----------------------------------------------------------------------     
	        | @label = Name of button 
	        | @url   = URL Target
	        | @icon  = Icon from Awesome.
	        | 
	        */
	        $this->index_button = array();



	        /* 
	        | ---------------------------------------------------------------------- 
	        | Customize Table Row Color
	        | ----------------------------------------------------------------------     
	        | @condition = If condition. You may use field alias. E.g : [id] == 1
	        | @color = Default is none. You can use bootstrap success,info,warning,danger,primary.        
	        | 
	        */
	        $this->table_row_color = array();     	          
	        $this->table_row_color[] = ['condition'=>"[estado] == 'A'","color"=>"success"]; 
	        
	        /*
	        | ---------------------------------------------------------------------- 
	        | You may use this bellow array to add statistic at dashboard 
	        | ---------------------------------------------------------------------- 
	        | @label, @count, @icon, @color 
	        |
	        */
	        $this->index_statistic = array();



	        /*
	        | ---------------------------------------------------------------------- 
	        | Add javascript at body 
	        | ---------------------------------------------------------------------- 
	        | javascript code in the variable 
	        | $this->script_js = "function() { ... }";
	        |
	        */


	        $this->script_js = "$('#estado').on('change', function() {
                                  if(this.value === 'E'){
                                      $('#numdias').attr('style', 'display:block');
                                  }
                                });";


            /*
	        | ---------------------------------------------------------------------- 
	        | Include HTML Code before index table 
	        | ---------------------------------------------------------------------- 
	        | html code to display it before index table
	        | $this->pre_index_html = "<p>test</p>";
	        |
	        */
	        $this->pre_index_html = null;
	        
	        
	        
	        /*
	        | ---------------------------------------------------------------------- 
	        | Include HTML Code after index table 
	        | ---------------------------------------------------------------------- 
	        | html code to display it after index table
	        | $this->post_index_html = "<p>test</p>";
	        |
	        */
	        $this->post_index_html = null;
	        
	        
	        
	        /*
	        | ---------------------------------------------------------------------- 
	        | Include Javascript File 
	        | ---------------------------------------------------------------------- 
	        | URL of your javascript each array 
	        | $this->load_js[] = asset("myfile.js");
	        |
	        */
	        $this->load_js = array();
	        
	        
	        
	        /*
	        | ---------------------------------------------------------------------- 
	        | Add css style at body 
	        | ---------------------------------------------------------------------- 
	        | css code in the variable 
	        | $this->style_css = ".style{....}";
	        |
	        */
	        $this->style_css = "
        	  td{ 
        	     font-size: 14px;
        	  }  
        	  a{ 
        	     font-size: 14px;
        	  }
        	  #numdias{
        	      display:none;
        	  }
        	  
        	  thead:nth-child(0n+3) {
                  position: absolute;
                  color: white;
                  background-color: #2ecc71;
              }
        	";
	        
	        
	        
	        /*
	        | ---------------------------------------------------------------------- 
	        | Include css File 
	        | ---------------------------------------------------------------------- 
	        | URL of your css each array 
	        | $this->load_css[] = asset("myfile.css");
	        |
	        */
	        $this->load_css = array();
	        
	        
	    }


	    /*
	    | ---------------------------------------------------------------------- 
	    | Hook for button selected
	    | ---------------------------------------------------------------------- 
	    | @id_selected = the id selected
	    | @button_name = the name of button
	    |
	    */
	    public function actionButtonSelected($id_selected,$button_name) {
	        //Your code here
	            
	    }


	    /*
	    | ---------------------------------------------------------------------- 
	    | Hook for manipulate query of index result 
	    | ---------------------------------------------------------------------- 
	    | @query = current sql query 
	    |
	    */
	    public function hook_query_index(&$query) {
	        $query->where('sis_prestamo.estado','A');
	            
	    }

	    /*
	    | ---------------------------------------------------------------------- 
	    | Hook for manipulate row of index table html 
	    | ---------------------------------------------------------------------- 
	    |
	    */    
	    public function hook_row_index($column_index,&$column_value) {	        
	    	//Your code here
	    }

	    /*
	    | ---------------------------------------------------------------------- 
	    | Hook for manipulate data input before add data is execute
	    | ---------------------------------------------------------------------- 
	    | @arr
	    |
	    */
	    public function hook_before_add(&$postdata) {        
	        //Your code here

	    }

	    /* 
	    | ---------------------------------------------------------------------- 
	    | Hook for execute command after add public static function called 
	    | ---------------------------------------------------------------------- 
	    | @id = last insert id
	    | 
	    */
	    public function hook_after_add($id) { 
	        $prestamo = DB::table('sis_prestamo')->where('id', $id)->first();
	    	$interes = DB::table('sis_interes')->where('id', $prestamo->id_interes)->first();
	    	$tiempo = DB::table('sis_tiempo')->where('id', $prestamo->id_tiempo)->first();
	    	$forma_pago = DB::table('sis_forma_pago')->where('id', $prestamo->id_forma_pago)->first();
	    	
	    	$tasa = (int)$interes->descripcion * $tiempo->numero;
	    	$saldo = ($tasa/100)*$prestamo->monto;
	    	$saldo = $saldo+$prestamo->monto;
	    	$total_pagar = $saldo;
	    	
	    	$num_pagos = $tiempo->numero * $forma_pago->valor;
	    	
	    	$pagos_de = $saldo/$num_pagos;
	    	$fecha = $prestamo->fecha;
	    	
	    	$intervalo = '';
	    	$dias = $tiempo->numero * 30;
	    	$dias_gracia = "+ 3 days";
	    	$fechaFin="";
	    	
	    	 
	    	
	    	$fechaFin = date("Y-m-d",strtotime($fecha."+ ". $dias . " days"));
	    	$fechaFin = date("Y-m-d",strtotime($fechaFin.$dias_gracia));  
	    	
	    	
	    	DB::table('sis_prestamo')
                ->where([
                    ['id', '=', $id],
                ])
                ->update(['total_pagar' => $total_pagar, 'saldo' => $saldo,'fecha_fin' => $fechaFin, 'pagos_de' => $pagos_de, 'estado' => 'A']);        

	    }

	    /* 
	    | ---------------------------------------------------------------------- 
	    | Hook for manipulate data input before update data is execute
	    | ---------------------------------------------------------------------- 
	    | @postdata = input post data 
	    | @id       = current id 
	    | 
	    */
	    public function hook_before_edit(&$postdata,$id) {        
	        //Your code here

	    }

	    /* 
	    | ---------------------------------------------------------------------- 
	    | Hook for execute command after edit public static function called
	    | ----------------------------------------------------------------------     
	    | @id       = current id 
	    | 
	    */
	    public function hook_after_edit($id) {
	        /*$prestamo = DB::table('sis_prestamo')->where('id', $id)->first();
	    	$interes = DB::table('sis_interes')->where('id', $prestamo->id_interes)->first();
	    	$tasa = (int)$interes->descripcion;
	    	$saldo = ($tasa/100)*$prestamo->monto;
	    	$saldo = $saldo+$prestamo->monto;
	    	$pagos_de = $saldo/$prestamo->num_pagos;
	    	$total_pagar = $saldo;
	    	DB::table('sis_prestamo')
                ->where([
                    ['id', '=', $id],
                ])
                ->update(['total_pagar' => $total_pagar, 'saldo' => $saldo, 'pagos_de' => $pagos_de]);*/
	    	
	    }

	    /* 
	    | ---------------------------------------------------------------------- 
	    | Hook for execute command before delete public static function called
	    | ----------------------------------------------------------------------     
	    | @id       = current id 
	    | 
	    */
	    public function hook_before_delete($id) {
	        //Your code here

	    }

	    /* 
	    | ---------------------------------------------------------------------- 
	    | Hook for execute command after delete public static function called
	    | ----------------------------------------------------------------------     
	    | @id       = current id 
	    | 
	    */
	    public function hook_after_delete($id) {
	        //Your code here

	    }



	    //By the way, you can still create your own method in here... :) 


	}